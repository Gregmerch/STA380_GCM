library(Mass)
library(MASS)
attach(Boston)
abline(lm.fit)
lm.fit = lm(medv~crim)
plot(lm.fit)
plot(medv, crim)
abline(lm.fit)
plot(medv, crim)
plot(crim, medv)
plot(crim, medv)
abline(lm.fit)
install.package('fFimport')
install.packages('fFimport')
?boston
?Boston
dim(Boston)
dim(Boston)[0]
len(Boston)
length(Boston)
dim(Boston)(0,1)
dim(Boston)
dim(Boston)[1]
paris(medv~lstat)
paris(medv,lstat)
?pairs
paris(medv)
paris(medv, crim)
paris(medv)
paris(Boston)
paris(Boston)
pairs(Boston)
pairs(Boston)
pairs(medv)
pairs(medv,crim)
pairs(medv~crim)
lm.fit = lm(medv~crim,lstat)
lm.fit = lm(medv~crim+lstat)
pairs(medv~crim)
pairs(medv~crim+lstat)
pairs(medv~Boston)
pairs(medv~Boston$names-medv)
?dataframe
??dataframe
type(Boston)
rtype(Boston)
library(MASS)
attach(Boston)
Boston
pairs(medv~Boston$names-medv)
colnames(Boston)
colName2 <- colnames(Boston)
colname2
colname2 <- colname2 -c(14,)
colname2 <- colname2 -c(14)
colName2
colName2 <- colName2 -c(14)
class(colName2)
colName2 <- colName2[1:13]
colName2
pairs(medv~colName2)
?Boston
pairs(Boston)
plot(crim)
plot(crim)
highcrime1 = identify(crim, n=1)
plot(crim)
highcrime1 = identify(crim, n=1)
highcrime2 = identify(crim, n=1)
plot(crim)
highcrime1 = identify(crim, n=8)
plot(crim ylim =c(0,100))
?plot
plot(crim)
highcrime1 = identify(crim, n=8)
print highcrime1
plot(crim)
crim2 = Boston[order(crim),]
print crim2[(1,10)]
print crim2
print(crim2)
print(crim2[:10])
head(crim2, n=10)
head(crim2[1], n=10)
head(crim2[0], n=10)
names(crim2)
head(crim2[index], n=10)
?order
source('~/.active-rstudio-document', echo=TRUE)
crim2 = Boston[order(crim, decreasing = TRUE),]
head(crim2[index], n=10)
head(crim2, n=10)
plot(tax)
head(tax2, n=20)
tax2 = Boston[order(crim, decreasing = TRUE),]
head(tax2, n=20)
head(tax2, n=25)
head(tax2, n=30)
head(tax2, n=35)
head(tax2, n=100)
tax
head(tax2, n=5)
tax2 = Boston[order(tax, decreasing = TRUE),]
head(tax2, n=5)
head(tax2, n=10)
head(tax2, n=5)
table(chas)
table(chas)[2]
median(ptratio)
which.min(medv)
Boston[399,]
Boston[minindex,]
minindex = which.min(medv)
Boston[minindex,]
table(rm)
7RM
7RM <- rm >= 7
RM7 <- rm >= 7
RM7
type(rm)
class(rm)
rm7 <- rm[>=7]
rm7 <- rm[rm>=7]
rm7
Boston7 <- Boston[rm>=7]
Boston7 <- Boston$rm[rm>=7]
Boston7
Boston7 <- Boston
Boston7
Boston7 <- Boston
Boston7 <- Boston7[Boston7$rm >= 7,]
Boston7
dim(Boston7[1])
dim(Boston7)[1]
Boston8 <- Boston
Boston8 <- Boston8[Boston8$rm >= 7,]
dim(Boston8)[1]
Boston8
Boston8 <- Boston
Boston8 <- Boston8[Boston8$rm >= 8,]
dim(Boston8)[1]
Boston8
pairs(Boston8)
median(Boston8)
median(Boston8$crim) - median(Boston$crim)
median(Boston8$indus) - median(Boston$indus)
median(Boston8$nox) - median(Boston$nox)
median(Boston8$age) - median(Boston$age)
median(Boston8$dis) - median(Boston$dis)
median(Boston8$rad) - median(Boston$rad)
median(Boston8$tax) - median(Boston$tax)
median(Boston8$ptratio) - median(Boston$ptratio)
median(Boston8$black) - median(Boston$black)
median(Boston8$lstat) - median(Boston$lstat)
median(Boston8$ptratio) - median(Boston$ptratio)
median(ptratio)
print(median(ptratio))
median(ptratio)
table(chas)[[2]]
class(ptratio)
median(Boston$ptratio)
zn_fit = lm(crim~zn, data=Boston)
summary(zn_fit)
indus_fit = lm(crim~indus, data=Boston)
summary(indus_fit)
chas_fit = lm(crim~chas ,data=Boston)
summary(chas_fit)
nox_fit = lm(crim~nox ,data=Boston)
summary(nox_fit)
rm_fit = lm(crim~rm ,data=Boston)
summary(rm_fit)
age_fit = lm(crim~age ,data=Boston)
dis_fit = lm(crim~dis ,data=Boston)
rad_fit = lm(crim~rad ,data=Boston)
tax_fit = lm(crim~tax ,data=Boston)
ptratio_fit = lm(crim~ptratio ,data=Boston)
black_fit = lm(crim~black ,data=Boston)
lstat_fit = lm(crim~lstat ,data=Boston)
medv_fit = lm(crim~medv ,data=Boston)
summary(age_fit)
summary(dis_fit)
summary(rad_fit)
summary(tax_fit)
summary(ptratio)
summary(ptratio_fit)
summary(black_fit)
summary(lstat_fit)
summary(medv_fit)
?summary
?pvalue
summary(medv_fit)[1]
summary(medv_fit)[2]
summary(medv_fit)[3]
summary(medv_fit)[4]
summary(medv_fit)[5]
summary(medv_fit)[6]
coef(zn_fit)
summary(zn_fit)[4]
summary(zn_fit)[4]
summary(indus_fit)[4]
summary(chas_fit)[4]
summary(indus_fit)[4]
summary(zn_fit)[4]
summary(zn_fit)[4]
summary(indus_fit)[4]
summary(chas_fit)[4]
summary(nox_fit)[4]
summary(rm_fit)[4]
summary(age_fit)[4]
summary(zn_fit)
summary(indus_fit)
summary(chas_fit)
summary(nox_fit)
summary(rm_fit)
summary(age_fit)
summary(dis_fit)
summary(rad_fit)
summary(tax_fit)
summary(ptratio_fit)
summary(black_fit)
summary(lstat_fit)
plot(zn, crim)
plot(indus, crim)
plot(chas,crim)
plot(nox, crim)
plot(rm, crim)
plot(age, crim)
plot(dis, crim)
plot(rad, crim)
plot(tax, crim)
plot(ptratio, crim)
plot(Boston$zn, Boston$crim)
plot(Boston$zn, Boston$crim)
plot(zn, crim)
dim(Boston)
plot(black, crim)
plot(lstat, crim)
plot(medv, crim)
fit_all = lm(crim~., data=Boston)
summary(fit_all)
library(MASS)
library(ISLR)
names(Boston)
lm.fit= lm(medv~lstat, data= Boston)
lm.fit
summary(lm.fit)
names(lm.fit)
coef(lm.fit)
confit(lm.fit)
confint(lm.fit)
predict(lm.fit, data.frame(lstat=(c(5,10,15))),interval="confidence")
predict(lm.fit, data.frame(lstat=(c(5,10,15))),interval="prediction")
plot(lstat,medv)
abline(lm.fit)
coeff(zn_fit)
coef(zn_fit)
coef(zn_fit)[2]
coef(zn_fit)[[2]
]
uni = c(coef(zn_fit)[2],coef(indus_fit)[2],coef(chas_fit)[2],coef(nox_fit)[2],
coef(rm_fit)[2], coef(age_fit)[2], coef(dis_fit)[2], coef(rad_fit)[2],
coef(tax_fit)[2], coef(ptratio_fit)[2], coef(black_fit)[2],
coef(lstat_fit)[2], coef(medv_fit)[2]
coef(lstat_fit)[2], coef(medv_fit)[2])
uni = c(coef(zn_fit)[2],coef(indus_fit)[2],coef(chas_fit)[2],coef(nox_fit)[2],
coef(rm_fit)[2], coef(age_fit)[2], coef(dis_fit)[2], coef(rad_fit)[2],
coef(tax_fit)[2], coef(ptratio_fit)[2], coef(black_fit)[2],
coef(lstat_fit)[2], coef(medv_fit)[2])
coef(fit_all)
multi = coef(fit_all)
multi
multi = coef(fit_all)[1]
multi = coef(fit_all)[2:14]
plot(multi,uni)
identify(multi, uni, n=1)
uni[4]
uni = c(coef(zn_fit)[2],coef(indus_fit)[2],coef(chas_fit)[2],coef(nox_fit)[2],
coef(rm_fit)[2], coef(age_fit)[2], coef(dis_fit)[2], coef(rad_fit)[2],
coef(tax_fit)[2], coef(ptratio_fit)[2], coef(black_fit)[2],
coef(lstat_fit)[2], coef(medv_fit)[2])
multi = coef(fit_all)[2:14]
plot(uni, multi)
nl_fit_zn = lm(crim~zn+zn^2+zn^3 ,data=Boston)
nl_fit_indus = lm(crim~indus+indus^2+indus^3 ,data=Boston)
nl_fit_chas = lm(crim~chas+chas^2+chas^3 ,data=Boston)
nl_fit_nox = lm(crim~nox+nox^2+nox^3 ,data=Boston)
nl_fit_rm = lm(crim~rm+rm^2+rm^3 ,data=Boston)
nl_fit_age = lm(crim~age+age^2+age^3 ,data=Boston)
nl_fit_dis = lm(crim~dis+dis^2+dis^3 ,data=Boston)
nl_fit_rad = lm(crim~rad+rad^2+rad^3 ,data=Boston)
nl_fit_tax = lm(crim~tax+tax^2+tax^3 ,data=Boston)
nl_fit_ptratio = lm(crim~ptratio^2+black^3 ,data=Boston)
nl_fit_black = lm(crim~black+black^2+black^3 ,data=Boston)
nl_fit_lstat = lm(crim~lstat+lstat^2+lstat^3 ,data=Boston)
nl_fit_medv = lm(crim~medv+medv^2+medv^3 ,data=Boston)
summary(nl_fit_zn)
summary(nl_fit_indus)
summary(nl_fit_chas)
summary(nl_fit_nox)
summary(nl_fit_rm)
summary(nl_fit_age)
summary(nl_fit_dis)
summary(nl_fit_rad)
summary(nl_fit_tax)
summary(nl_fit_ptratio)
summary(nl_fit_black)
summary(nl_fit_lstat)
summary(nl_fit_medv)
nl_fit_zn = lm(crim~zn+I(zn^2)+I(zn^3) ,data=Boston)
summary(nl_fit_zn)
nl_fit_indus = lm(crim~indus+I(indus^2)+I(indus^3) ,data=Boston)
nl_fit_chas = lm(crim~chas+I(chas^2)+I(chas^3) ,data=Boston)
nl_fit_nox = lm(crim~nox+I(nox^2)+I(nox^3) ,data=Boston)
nl_fit_rm = lm(crim~rm+I(rm^2)+I(rm^3) ,data=Boston)
nl_fit_age = lm(crim~age+I(age^2)+I(age^3) ,data=Boston)
nl_fit_dis = lm(crim~dis+I(dis^2)+I(dis^3) ,data=Boston)
nl_fit_rad = lm(crim~rad+I(rad^2)+I(rad^3) ,data=Boston)
nl_fit_tax = lm(crim~tax+I(tax^2)+I(tax^3) ,data=Boston)
nl_fit_ptratio = lm(crim~I(ptratio^2)+I(black^3) ,data=Boston)
nl_fit_black = lm(crim~black+I(black^2)+I(black^3) ,data=Boston)
nl_fit_lstat = lm(crim~lstat+I(lstat^2)+I(lstat^3) ,data=Boston)
nl_fit_medv = lm(crim~medv+I(medv^2)+I(medv^3) ,data=Boston)
summary(nl_fit_zn)
summary(nl_fit_indus)
summary(nl_fit_chas)
summary(nl_fit_nox)
summary(nl_fit_rm)
summary(nl_fit_age)
summary(nl_fit_dis)
summary(nl_fit_rad)
summary(nl_fit_tax)
summary(nl_fit_ptratio)
summary(nl_fit_black)
summary(nl_fit_lstat)
summary(nl_fit_medv)
nl_fit_ptratio = lm(crim~I(ptratio^2)+I(ptratio^3) ,data=Boston)
summary(nl_fit_ptratio)
summary(nl_fit_black)
summary(nl_fit_lstat)
summary(nl_fit_medv)
wine = read.csv('../data/wine.csv', header=TRUE)
wine_unsup <- wine[,-c(12,13)]
wine_centered <- scale(wine_unsup, center=TRUE, scale=FALSE)
pc1 = prcomp(wine_unsup, scale. =TRUE)
plot(pc1)
wine = read.csv('../data/wine.csv', header=TRUE)
getwd()
setwd('..')
getwd()
setwd('STA380_GCM')
getwd()
getwd('exercises')
getwd('exercises/')
setwd('exercises')
getwd()
wine = read.csv('../data/wine.csv', header=TRUE)
wine_unsup <- wine[,-c(12,13)]
wine_centered <- scale(wine_unsup, center=TRUE, scale=FALSE)
pc1 = prcomp(wine_unsup, scale. =TRUE)
plot(pc1)
loadings = pc1$rotation
scores = pc1$x
o1 = order(loadings[,1])
colnames(wine_unsup)[head(o1,2)]
colnames(wine_unsup)[tail(o1,2)]
qplot(scores[,1], scores[,2], color=wine$color, xlab='Component 1', ylab='Component 2')
qplot(scores[,1], scores[,2], color=wine$quality, xlab='Component 1', ylab='Component 2')
wine_unsup_scaled <- scale(wine_unsup, center=TRUE, scale=TRUE)
cluster_color <- kmeans(wine_unsup_scaled, centers=2, nstart=500)
cluster_quality <- kmeans(wine_unsup_scaled, centers=4, nstart=500)
names(wine)
names(cluster_2)
qplot(factor(color) , data=wine, geom="bar", fill =factor(cluster_color$cluster))
library(ggplot2)
library(mosaic)
library(fImport)
library(foreach)
library(RCurl)
qplot(scores[,1], scores[,2], color=wine$color, xlab='Component 1', ylab='Component 2')
qplot(scores[,1], scores[,2], color=wine$quality, xlab='Component 1', ylab='Component 2')
qplot(factor(color) , data=wine, geom="bar", fill =factor(cluster_color$cluster))
qplot(factor(quality), data=wine, geom="bar", fill= factor(cluster_quality$cluster))
qplot(volatile.acidity, citric.acid, data=wine, color=factor(cluster_color$cluster))
rnorm(1)
3*rnorm(1)
Z = survey[,-c(1)]
survey = read.csv('../data/social_marketing.csv',header=TRUE)
dim(survey)
range(2,37)
Z = survey[,-c(1)]
Zscale = scale(Z, center=TRUE, scale=TRUE)
Zcenter = scale(Z, center=TRUE, scale=FALSE)
pc2 = prcomp(Zcenter, scale. =TRUE)
loadings2 = pc2$rotation
scores2 = pc2$x
plot(pc2)
loadings2
scores2
scores2
scores2[10]
scores2[1]
scores2[2]
scores2[3]
pc2 = prcomp(Z)
loadings2 = pc2$rotation
scores2 = pc2$x
plot(pc2)
o1 = order(loadings2[,1])
colnames(Z)[head(o1,25)]
colnames(Z)[tail(o1,25)]
colnames(Z)[head(o1,6)]
colnames(Z)[tail(o1,6)]
o2 = order(loadings2[,2])
colnames(Z)[head(o2,25)]
colnames(Z)[head(o2,6)]
colnames(Z)[tail(o2,6)]
plot(small_business, coolege_uni, data=survey)
names(survey)
plot(small_business, coolege_uni, data=survey)
plot(survey$small_business, survey$coolege_uni)
plot(survey$coolege_uni, survey$small_business)
plot(survey$small_business, tv_film)
plot(small_business, tv_film, data=survey)
qplot(small_business, tv_film, data=survey)
qplot(tv_film, data=survey)
qplot(tv_film, small_business, data=survey)
survey$small_business
max(survey$small_business)
max(survey$tv_film)
colnames(Z)[head(o1,6)]
colnames(Z)[tail(o1,6)]
qplot(adult, spam, data=survey)
qplot(college_uni, tv_film, data=survey)
cluster_5 = kmeans(Zscaled, centers =5, nstart=250)
cluster_5 = kmeans(Zscale, centers =5, nstart=250)
qplot(college_uni, tv_film, data=survey, col=factor(cluster_5$cluster))
qplot(scores2[,1], scores2[,2], xlab='Component 1', ylab='Component 2', col= factor(cluster_5$cluster))
qplot(scores2[,2], scores2[,3],  xlab='Component 1', ylab='Component 2', col= factor(cluster_5$cluster))
qplot(scores2[,3], scores2[,4],  xlab='Component 1', ylab='Component 2', col= factor(cluster_5$cluster))
qplot(scores2[,4], scores2[,5],  xlab='Component 1', ylab='Component 2', col= factor(cluster_5$cluster))
qplot(scores2[,5], scores2[,6],  xlab='Component 1', ylab='Component 2', col= factor(cluster_5$cluster))
qplot(scores2[,6], scores2[,7],  xlab='Component 1', ylab='Component 2', col= factor(cluster_5$cluster))
qplot(scores2[,7], scores2[,8],  xlab='Component 1', ylab='Component 2', col= factor(cluster_5$cluster))
qplot(scores2[,1], scores2[,2], xlab='Component 1', ylab='Component 2', col= factor(cluster_5$cluster))
cluster_5 = kmeans(Zscale, centers =3, nstart=250)
qplot(college_uni, tv_film, data=survey, col=factor(cluster_5$cluster))
qplot(scores2[,1], scores2[,2], xlab='Component 1', ylab='Component 2', col= factor(cluster_5$cluster))
qplot(scores2[,2], scores2[,3],  xlab='Component 1', ylab='Component 2', col= factor(cluster_5$cluster))
qplot(scores2[,3], scores2[,4],  xlab='Component 1', ylab='Component 2', col= factor(cluster_5$cluster))
qplot(scores2[,4], scores2[,5],  xlab='Component 1', ylab='Component 2', col= factor(cluster_5$cluster))
